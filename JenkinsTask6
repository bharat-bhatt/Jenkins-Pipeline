pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo "Step 1: Building the application using Maven or another build automation tool"
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo "Step 2: Running unit and integration tests"
            }
        }

        stage('Code Analysis') {
            steps {
                echo "Step 3: Analyzing the code using a code analysis tool like SonarQube"
            }
        }

        stage('Security Scan') {
            steps {
                echo "Step 4: Performing a security scan using a security analysis tool such as OWASP ZA"
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo "Step 5: Deploying the application to a staging server, for example, AWS EC2"
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo "Step 6: Running integration tests on the staging environment"
            }
        }

        stage('Deploy to Production') {
            steps {
                echo "Step 7: Deploying the application to a production server, such as AWS EC2"
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully!"
            emailext(
                to: "bharatbhatt232@gmail.com",
                subject: "Pipeline Status: Success",
                body: "The Jenkins pipeline has successfully finished.",
                attachLog: true
            )
        }
        failure {
            echo "Pipeline encountered a failure!"
            emailext(
                to: "bharatbhatt232@gmail.com",
                subject: "Pipeline Status: Failure",
                body: "The Jenkins pipeline has experienced an issue. Please check the logs for details.",
                attachLog: true
            )
        }
    }
}
